basePath: /
definitions:
  httputil.HTTPError:
    properties:
      code:
        example: 500
        type: integer
      msg:
        example: 操作失败
        type: string
    type: object
  httputil.Response:
    properties:
      code:
        example: 200
        type: integer
      data: {}
      msg:
        example: 操作成功
        type: string
    type: object
  user.LoginResponse:
    properties:
      code:
        example: 200
        type: integer
      data:
        example: token
        type: string
      msg:
        example: 操作成功
        type: string
    type: object
  user.UserDTO:
    properties:
      created_at:
        type: string
      id:
        type: integer
      user_name:
        type: string
    type: object
  user.UserResponse:
    properties:
      code:
        example: 200
        type: integer
      data:
        $ref: '#/definitions/user.UserDTO'
      msg:
        example: 操作成功
        type: string
    type: object
  user.loginParam:
    properties:
      password:
        minLength: 6
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  user.registerParam:
    properties:
      email:
        minLength: 6
        type: string
      password:
        minLength: 6
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
info:
  contact:
    email: victor
    name: victor1
  description: ygo测试
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://github.com/swaggo/swag
  title: ygo
  version: "1.1"
paths:
  /user/login:
    post:
      consumes:
      - application/json
      description: 用户登录接口
      parameters:
      - description: login with param
        in: body
        name: loginParam
        required: true
        schema:
          $ref: '#/definitions/user.loginParam'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.LoginResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: 用户登录
      tags:
      - user
  /user/mock-test-user:
    get:
      consumes:
      - application/json
      description: 添加管理员用户 用户名：admin 密码：admin123 邮箱：admin@123.com
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httputil.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: 添加管理员用户
      tags:
      - user
  /user/register:
    post:
      consumes:
      - application/json
      description: 用户注册接口
      parameters:
      - description: 注册参数
        in: body
        name: registerParam
        required: true
        schema:
          $ref: '#/definitions/user.registerParam'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httputil.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: 用户注册
      tags:
      - user
  /user/register-verify:
    get:
      consumes:
      - application/json
      description: 使用token验证用户注册信息
      parameters:
      - description: 注册的验证码
        in: query
        name: captcha
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httputil.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: 验证注册信息
      tags:
      - user
  /user/userinfo:
    get:
      consumes:
      - application/json
      description: 获取登录用户信息接口
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.UserResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: 登录用户信息
      tags:
      - user
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
swagger: "2.0"
x-extension-openapi:
  example: value on a json format
